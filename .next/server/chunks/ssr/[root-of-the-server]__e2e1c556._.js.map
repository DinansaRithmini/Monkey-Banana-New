{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///Users/dinansarithmini/Development/Monkey_Banana/monkey-banana/src/components/ui/button.tsx"],"sourcesContent":["\"use client\";\nimport * as React from \"react\";\n\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  variant?: \"primary\" | \"secondary\" | \"outline\";\n}\n\nexport const Button: React.FC<ButtonProps> = ({\n  children,\n  onClick,\n  disabled,\n  className = \"\",\n  variant = \"primary\",\n  ...props\n}) => {\n  const base =\n    \"font-extrabold rounded-full px-5 py-2 text-base transition-all active:scale-95 focus:outline-none\";\n\n  const variants: Record<string, string> = {\n    primary:\n      \"bg-gradient-to-b from-[#FFD85A] to-[#F7A531] text-[#4E2A0B] shadow-[0_3px_0_rgba(0,0,0,0.3)] hover:brightness-105\",\n    secondary:\n      \"bg-[#FFF5D6] text-[#8B5A2B] border-2 border-[#F7A531] hover:bg-[#FFE082]\",\n    outline:\n      \"border-2 border-[#F7A531] text-[#F7A531] bg-transparent hover:bg-[#FFF5D6]\",\n  };\n\n  const disabledStyles = \"opacity-50 cursor-not-allowed\";\n\n  return (\n    <button\n      onClick={onClick}\n      disabled={disabled}\n      className={`${base} ${variants[variant]} ${\n        disabled ? disabledStyles : \"\"\n      } ${className}`}\n      {...props}\n    >\n      {children}\n    </button>\n  );\n};\n"],"names":[],"mappings":";;;;;AAAA;;AAOO,MAAM,SAAgC,CAAC,EAC5C,QAAQ,EACR,OAAO,EACP,QAAQ,EACR,YAAY,EAAE,EACd,UAAU,SAAS,EACnB,GAAG,OACJ;IACC,MAAM,OACJ;IAEF,MAAM,WAAmC;QACvC,SACE;QACF,WACE;QACF,SACE;IACJ;IAEA,MAAM,iBAAiB;IAEvB,qBACE,kQAAC;QACC,SAAS;QACT,UAAU;QACV,WAAW,GAAG,KAAK,CAAC,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC,EACvC,WAAW,iBAAiB,GAC7B,CAAC,EAAE,WAAW;QACd,GAAG,KAAK;kBAER;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":["file:///Users/dinansarithmini/Development/Monkey_Banana/monkey-banana/src/components/UIComponents/ContinuousBettingWheel/subcomponents/SlotMachine.tsx"],"sourcesContent":["\"use client\";\nimport React from \"react\";\n\ninterface Player {\n  id: string;\n  name: string;\n  amount: number;\n  isWinner?: boolean;\n}\n\ninterface SlotMachineProps {\n  players: Player[];\n  currentWinnerId?: string | null;\n  isSpinning: boolean;\n}\n\nconst SlotMachine: React.FC<SlotMachineProps> = ({\n  players,\n  currentWinnerId,\n  isSpinning,\n}) => {\n  // Select current player (winner or fallback)\n  const currentPlayer =\n    players.find((p) => p.id === currentWinnerId) || players[0];\n\n  return (\n    <div className=\"relative w-full max-w-3xl mx-auto p-4\">\n      {/* Slot machine container */}\n      <div className=\"relative flex flex-col items-center\">\n        \n        {/* Slot machine image */}\n        <div className=\"relative flex justify-center items-center mb-4\">\n          <img\n            src=\"/images/slot_machine.png\"\n            alt=\"Slot Machine\"\n            className=\"drop-shadow-lg select-none pointer-events-none max-w-[638px] h-auto\"\n          />\n\n          {/* Reels with names displayed vertically */}\n          <div\n            className={`absolute inset-0 flex flex-col items-center justify-center space-y-4 ${\n              isSpinning ? \"animate-pulse\" : \"\"\n            }`}\n          >\n            {players.map((player, index) => (\n              <div\n                key={index}\n                className={`px-6 py-2 text-center bg-white text-[#4E2A0B] font-bold text-lg rounded-lg border-2 border-[#F7A531] ${\n                  currentPlayer.id === player.id ? \"text-[#F7A531] border-[#F7A531]\" : \"\"\n                }`}\n              >\n                {player.name.toUpperCase()}\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Winner Display */}\n        <div className=\"text-center mt-4\">\n          {currentWinnerId && (\n            <div className=\"inline-block bg-gradient-to-r from-[#FFD85A] to-[#F7A531] text-[#4E2A0B] font-extrabold py-2 px-6 rounded-full shadow\">\n              üèÜ Winner:{\" \"}\n              {players.find((p) => p.id === currentWinnerId)?.name || \"Unknown\"} üèÜ\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SlotMachine;\n"],"names":[],"mappings":";;;;;AAAA;;AAgBA,MAAM,cAA0C,CAAC,EAC/C,OAAO,EACP,eAAe,EACf,UAAU,EACX;IACC,6CAA6C;IAC7C,MAAM,gBACJ,QAAQ,IAAI,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK,oBAAoB,OAAO,CAAC,EAAE;IAE7D,qBACE,kQAAC;QAAI,WAAU;kBAEb,cAAA,kQAAC;YAAI,WAAU;;8BAGb,kQAAC;oBAAI,WAAU;;sCACb,kQAAC;4BACC,KAAI;4BACJ,KAAI;4BACJ,WAAU;;;;;;sCAIZ,kQAAC;4BACC,WAAW,CAAC,qEAAqE,EAC/E,aAAa,kBAAkB,IAC/B;sCAED,QAAQ,GAAG,CAAC,CAAC,QAAQ,sBACpB,kQAAC;oCAEC,WAAW,CAAC,qGAAqG,EAC/G,cAAc,EAAE,KAAK,OAAO,EAAE,GAAG,oCAAoC,IACrE;8CAED,OAAO,IAAI,CAAC,WAAW;mCALnB;;;;;;;;;;;;;;;;8BAYb,kQAAC;oBAAI,WAAU;8BACZ,iCACC,kQAAC;wBAAI,WAAU;;4BAAwH;4BAC1H;4BACV,QAAQ,IAAI,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK,kBAAkB,QAAQ;4BAAU;;;;;;;;;;;;;;;;;;;;;;;AAOhF;uCAEe","debugId":null}},
    {"offset": {"line": 192, "column": 0}, "map": {"version":3,"sources":["file:///Users/dinansarithmini/Development/Monkey_Banana/monkey-banana/src/components/UIComponents/ContinuousBettingWheel/subcomponents/InsufficientPopup.tsx"],"sourcesContent":["\"use client\";\nimport React from \"react\";\nimport { Button } from \"@/components/ui/button\";\n\ninterface InsufficientPopupProps {\n  show: boolean;\n  onClose: () => void;\n}\n\nconst InsufficientPopup: React.FC<InsufficientPopupProps> = ({ show, onClose }) => {\n  if (!show) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black/70 z-50 flex items-center justify-center\">\n      <div\n        className=\"bg-white rounded-2xl p-6 text-center max-w-xs w-[90vw] shadow-[0_6px_32px_rgba(0,0,0,0.25)] relative overflow-hidden\"\n      >\n        {/* Top banana arc */}\n        <div className=\"absolute -top-28 left-1/2 -translate-x-1/2 w-full h-60 z-0 overflow-hidden pointer-events-none\">\n          <div\n            className=\"w-full h-full\"\n            style={{\n              background: \"linear-gradient(90deg, #FFD85A, #F7A531)\",\n              borderBottomLeftRadius: \"100% 60%\",\n              borderBottomRightRadius: \"100% 60%\",\n            }}\n          ></div>\n        </div>\n\n        {/* Main content */}\n        <div className=\"relative z-10\">\n          {/* Icon */}\n          <img\n            src=\"/images/Insufficient_balance_icon.png\"\n            alt=\"Insufficient Balance\"\n            className=\"w-20 h-20 mx-auto mb-3\"\n          />\n\n          {/* Title */}\n          <h3 className=\"text-[#4E2A0B] font-extrabold text-lg mb-2\">\n            Insufficient Balance\n          </h3>\n\n          {/* Message */}\n          <p className=\"text-gray-700 text-sm mb-6 px-3\">\n            You don‚Äôt have enough coins to join this round.  \n            Top up your balance and try again!\n          </p>\n\n          {/* Button */}\n          <Button\n            onClick={onClose}\n            className=\"bg-gradient-to-b from-[#FFD85A] to-[#F7A531] text-[#4E2A0B] font-extrabold px-10 py-2 rounded-full hover:brightness-105\"\n          >\n            OK\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default InsufficientPopup;\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AASA,MAAM,oBAAsD,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE;IAC5E,IAAI,CAAC,MAAM,OAAO;IAElB,qBACE,kQAAC;QAAI,WAAU;kBACb,cAAA,kQAAC;YACC,WAAU;;8BAGV,kQAAC;oBAAI,WAAU;8BACb,cAAA,kQAAC;wBACC,WAAU;wBACV,OAAO;4BACL,YAAY;4BACZ,wBAAwB;4BACxB,yBAAyB;wBAC3B;;;;;;;;;;;8BAKJ,kQAAC;oBAAI,WAAU;;sCAEb,kQAAC;4BACC,KAAI;4BACJ,KAAI;4BACJ,WAAU;;;;;;sCAIZ,kQAAC;4BAAG,WAAU;sCAA6C;;;;;;sCAK3D,kQAAC;4BAAE,WAAU;sCAAkC;;;;;;sCAM/C,kQAAC,gKAAM;4BACL,SAAS;4BACT,WAAU;sCACX;;;;;;;;;;;;;;;;;;;;;;;AAOX;uCAEe","debugId":null}},
    {"offset": {"line": 287, "column": 0}, "map": {"version":3,"sources":["file:///Users/dinansarithmini/Development/Monkey_Banana/monkey-banana/src/components/UIComponents/ContinuousBettingWheel/subcomponents/BetConfirmationPopup.tsx"],"sourcesContent":["\"use client\";\nimport React from \"react\";\nimport { Button } from \"@/components/ui/button\";\n\ninterface BetConfirmationPopupProps {\n  show: boolean;\n  amount: number | null;\n  isPlacing: boolean;\n  onConfirm: () => void;\n  onCancel: () => void;\n}\n\nconst BetConfirmationPopup: React.FC<BetConfirmationPopupProps> = ({\n  show,\n  amount,\n  isPlacing,\n  onConfirm,\n  onCancel,\n}) => {\n  if (!show || amount === null) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black/70 z-50 flex items-center justify-center\">\n      <div\n        className=\"bg-white rounded-2xl p-6 text-center max-w-sm w-[90vw] shadow-[0_6px_32px_rgba(0,0,0,0.25)] relative overflow-hidden\"\n      >\n        {/* Top banana arc background */}\n        <div className=\"absolute -top-28 left-1/2 -translate-x-1/2 w-full h-60 z-0 overflow-hidden pointer-events-none\">\n          <div\n            className=\"w-full h-full\"\n            style={{\n              background: \"linear-gradient(90deg, #FFD85A, #F7A531)\",\n              borderBottomLeftRadius: \"100% 60%\",\n              borderBottomRightRadius: \"100% 60%\",\n            }}\n          ></div>\n        </div>\n\n        {/* Main Content */}\n        <div className=\"relative z-10\">\n          {/* Coin Icon */}\n          <img\n            src=\"/images/Coin.png\"\n            alt=\"Coin\"\n            className=\"w-16 h-16 mx-auto mb-3\"\n          />\n\n          {/* Heading */}\n          <h3 className=\"text-[#4E2A0B] font-extrabold text-xl mb-2\">\n            Confirm Wager\n          </h3>\n\n          <p className=\"text-sm text-gray-700 mb-4\">\n            Are you sure you want to place a wager of\n          </p>\n\n          {/* Amount */}\n          <div className=\"flex justify-center items-center mb-4\">\n            <img\n              src=\"/images/Coin.png\"\n              alt=\"coin\"\n              className=\"inline-block w-6 h-6 mr-2\"\n            />\n            <span className=\"text-2xl font-extrabold text-[#8B5A2B]\">\n              {amount.toLocaleString()}\n            </span>\n          </div>\n\n          <p className=\"text-xs text-gray-500 mb-6\">\n            This amount will be deducted from your wallet balance\n          </p>\n\n          {/* Buttons */}\n          <div className=\"flex gap-3\">\n            <Button\n              onClick={onCancel}\n              className=\"flex-1 bg-gray-300 text-[#4E2A0B] hover:bg-gray-400\"\n            >\n              Cancel\n            </Button>\n            <Button\n              onClick={onConfirm}\n              disabled={isPlacing}\n              className=\"flex-1 bg-gradient-to-b from-[#FFD85A] to-[#F7A531] text-[#4E2A0B] font-extrabold hover:brightness-105\"\n            >\n              {isPlacing ? \"Placing...\" : \"Confirm\"}\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BetConfirmationPopup;\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAYA,MAAM,uBAA4D,CAAC,EACjE,IAAI,EACJ,MAAM,EACN,SAAS,EACT,SAAS,EACT,QAAQ,EACT;IACC,IAAI,CAAC,QAAQ,WAAW,MAAM,OAAO;IAErC,qBACE,kQAAC;QAAI,WAAU;kBACb,cAAA,kQAAC;YACC,WAAU;;8BAGV,kQAAC;oBAAI,WAAU;8BACb,cAAA,kQAAC;wBACC,WAAU;wBACV,OAAO;4BACL,YAAY;4BACZ,wBAAwB;4BACxB,yBAAyB;wBAC3B;;;;;;;;;;;8BAKJ,kQAAC;oBAAI,WAAU;;sCAEb,kQAAC;4BACC,KAAI;4BACJ,KAAI;4BACJ,WAAU;;;;;;sCAIZ,kQAAC;4BAAG,WAAU;sCAA6C;;;;;;sCAI3D,kQAAC;4BAAE,WAAU;sCAA6B;;;;;;sCAK1C,kQAAC;4BAAI,WAAU;;8CACb,kQAAC;oCACC,KAAI;oCACJ,KAAI;oCACJ,WAAU;;;;;;8CAEZ,kQAAC;oCAAK,WAAU;8CACb,OAAO,cAAc;;;;;;;;;;;;sCAI1B,kQAAC;4BAAE,WAAU;sCAA6B;;;;;;sCAK1C,kQAAC;4BAAI,WAAU;;8CACb,kQAAC,gKAAM;oCACL,SAAS;oCACT,WAAU;8CACX;;;;;;8CAGD,kQAAC,gKAAM;oCACL,SAAS;oCACT,UAAU;oCACV,WAAU;8CAET,YAAY,eAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAO1C;uCAEe","debugId":null}},
    {"offset": {"line": 435, "column": 0}, "map": {"version":3,"sources":["file:///Users/dinansarithmini/Development/Monkey_Banana/monkey-banana/src/components/UIComponents/WalletBalanceBadge/WalletBalanceBadge.tsx"],"sourcesContent":["import React from \"react\";\n\ninterface WalletBalanceBadgeProps {\n  /** Total coin balance (default 0). */\n  balance?: number;\n}\n\n/**\n * üçå WalletBalanceBadge\n * Displays the player's wallet balance with a shiny coin and a plus button.\n */\nconst WalletBalanceBadge: React.FC<WalletBalanceBadgeProps> = ({ balance = 0 }) => {\n  const formattedBalance = balance.toLocaleString(\"en-US\");\n\n  return (\n    <div className=\"inline-flex items-center select-none\">\n      {/* Coin with plus icon */}\n      <div className=\"relative -mr-4 flex-shrink-0\">\n        <img\n          src=\"/images/Coin.png\"\n          alt=\"coin\"\n          className=\"w-14 sm:w-16 md:w-20 drop-shadow-[0_2px_0px_rgba(0,0,0,0.25)]\"\n        />\n        <span className=\"absolute bottom-3 right-3 translate-x-1/2 translate-y-1/2\">\n          <img\n            src=\"/images/Plus.png\"\n            alt=\"plus\"\n            className=\"w-7 h-7 sm:w-8 sm:h-8 md:w-10 md:h-10\"\n          />\n        </span>\n      </div>\n\n      {/* Balance pill */}\n      <div\n        className=\"\n          bg-gradient-to-b from-[#FFD85A] via-[#F7A531] to-[#E89E00]\n          rounded-lg border-2 sm:border-4 border-white\n          px-4 sm:px-6 py-1.5 sm:py-2\n          shadow-[0_3px_0_rgba(0,0,0,0.45)]\n          flex items-center\n        \"\n      >\n        <span\n          className=\"\n            text-white font-extrabold drop-shadow-[0_2px_0_rgba(0,0,0,0.35)]\n            text-base sm:text-lg md:text-2xl\n          \"\n        >\n          {formattedBalance}\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default WalletBalanceBadge;\n"],"names":[],"mappings":";;;;;;AAOA;;;CAGC,GACD,MAAM,qBAAwD,CAAC,EAAE,UAAU,CAAC,EAAE;IAC5E,MAAM,mBAAmB,QAAQ,cAAc,CAAC;IAEhD,qBACE,kQAAC;QAAI,WAAU;;0BAEb,kQAAC;gBAAI,WAAU;;kCACb,kQAAC;wBACC,KAAI;wBACJ,KAAI;wBACJ,WAAU;;;;;;kCAEZ,kQAAC;wBAAK,WAAU;kCACd,cAAA,kQAAC;4BACC,KAAI;4BACJ,KAAI;4BACJ,WAAU;;;;;;;;;;;;;;;;;0BAMhB,kQAAC;gBACC,WAAU;0BAQV,cAAA,kQAAC;oBACC,WAAU;8BAKT;;;;;;;;;;;;;;;;;AAKX;uCAEe","debugId":null}},
    {"offset": {"line": 510, "column": 0}, "map": {"version":3,"sources":["file:///Users/dinansarithmini/Development/Monkey_Banana/monkey-banana/src/components/ui/card.tsx"],"sourcesContent":["\"use client\";\nimport * as React from \"react\";\n\ninterface CardProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nexport const Card: React.FC<CardProps> = ({ children, className = \"\", ...props }) => {\n  return (\n    <div\n      className={`\n        bg-gradient-to-b from-[#FFF5C3] to-[#FFD85A]\n        border-4 border-[#F7A531]\n        rounded-2xl shadow-[0_4px_0_rgba(0,0,0,0.25)]\n        ${className}\n      `}\n      {...props}\n    >\n      {children}\n    </div>\n  );\n};\n\ninterface CardContentProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nexport const CardContent: React.FC<CardContentProps> = ({\n  children,\n  className = \"\",\n  ...props\n}) => {\n  return (\n    <div\n      className={`p-4 text-[#4E2A0B] font-bold ${className}`}\n      {...props}\n    >\n      {children}\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;;;;AAAA;;AAKO,MAAM,OAA4B,CAAC,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,GAAG,OAAO;IAC9E,qBACE,kQAAC;QACC,WAAW,CAAC;;;;QAIV,EAAE,UAAU;MACd,CAAC;QACA,GAAG,KAAK;kBAER;;;;;;AAGP;AAIO,MAAM,cAA0C,CAAC,EACtD,QAAQ,EACR,YAAY,EAAE,EACd,GAAG,OACJ;IACC,qBACE,kQAAC;QACC,WAAW,CAAC,6BAA6B,EAAE,WAAW;QACrD,GAAG,KAAK;kBAER;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 550, "column": 0}, "map": {"version":3,"sources":["file:///Users/dinansarithmini/Development/Monkey_Banana/monkey-banana/src/components/UIComponents/PastWinners/PastWinners.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Trophy } from \"lucide-react\";\n\n// Type definitions\ninterface Winner {\n  winnerId: string;\n  playerName: string;\n  betAmount: number;\n  wonAmount: number;\n  profileImage?: string;\n  createdAt?: string;\n}\n\ninterface PastWinnersProps {\n  refreshTrigger?: number;\n}\n\n/**\n * üèÜ PastWinners Component\n * Displays recent winners with their coin amounts and avatars.\n */\nexport default function PastWinners({ refreshTrigger = 0 }: PastWinnersProps) {\n  const [winners, setWinners] = useState<Winner[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const coinImgPath = \"/images/Coin.png\";\n\n  useEffect(() => {\n    fetchWinners();\n    const interval = setInterval(fetchWinners, 30000); // auto refresh every 30s\n    return () => clearInterval(interval);\n  }, [refreshTrigger]);\n\n  const fetchWinners = async () => {\n    try {\n      const response = await fetch(\"/api/winners\");\n      const data = await response.json();\n\n      if (data.success) {\n        setWinners(data.winners);\n        setError(null);\n      } else {\n        setError(\"Failed to load winners\");\n      }\n    } catch (err) {\n      setError(\"Failed to load winners\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const formatNumber = (amount: number) =>\n    new Intl.NumberFormat(\"en-IN\", { minimumFractionDigits: 0 }).format(amount);\n\n  const formatDate = (dateString?: string) => {\n    if (!dateString) return \"\";\n    const date = new Date(dateString);\n    return date.toLocaleDateString(\"en-US\", {\n      month: \"short\",\n      day: \"numeric\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n    });\n  };\n\n  // Loading view\n  if (loading) {\n    return (\n      <Card className=\"bg-gradient-to-b from-[#FFD85A] to-[#F7A531] border-none backdrop-blur\">\n        <CardContent className=\"p-4 text-center text-[#4E2A0B] font-semibold\">\n          Loading past winners...\n        </CardContent>\n      </Card>\n    );\n  }\n\n  // Error view\n  if (error) {\n    return (\n      <Card className=\"bg-gradient-to-b from-[#FFD85A] to-[#F7A531] border-none backdrop-blur\">\n        <CardContent className=\"p-4 text-center text-red-700 font-semibold\">\n          {error}\n        </CardContent>\n      </Card>\n    );\n  }\n\n  // Empty state\n  if (winners.length === 0) {\n    return (\n      <Card className=\"bg-gradient-to-b from-[#FFD85A] to-[#F7A531] border-none backdrop-blur\">\n        <div className=\"pb-3\">\n          <h3 className=\"flex items-center justify-center gap-2 text-[#4E2A0B] font-bold\">\n            <Trophy className=\"w-5 h-5 text-[#4E2A0B]\" />\n            Past Winners\n          </h3>\n        </div>\n        <CardContent className=\"text-center text-[#4E2A0B]/70 pb-4\">\n          No winners yet. Be the first!\n        </CardContent>\n      </Card>\n    );\n  }\n\n  // Winners list\n  return (\n    <Card className=\"bg-gradient-to-b from-[#FFD85A] to-[#F7A531] border-none rounded-2xl shadow-lg\">\n      <div className=\"pb-2\">\n        <h3 className=\"flex items-center justify-center gap-2 text-[#4E2A0B] font-bold\">\n          <Trophy className=\"w-5 h-5 text-[#4E2A0B]\" />\n          Past Winners\n        </h3>\n      </div>\n\n      <CardContent className=\"p-4 pt-0\">\n        <div className=\"space-y-3 max-h-96 overflow-y-auto scrollbar-hide\">\n          {winners.map((winner) => (\n            <Card\n              key={winner.winnerId}\n              className=\"bg-[#FFF5C3] border border-[#F7A531]/40 rounded-xl shadow-[0_2px_6px_rgba(0,0,0,0.1)]\"\n            >\n              <CardContent className=\"p-3 flex items-center justify-between\">\n                {/* Left: Avatar + Name */}\n                <div className=\"flex items-center gap-3\">\n                  <img\n                    src={\n                      winner.profileImage ||\n                      \"https://safa.sgp1.digitaloceanspaces.com/safa./avatar_images/Ravex_M.png\"\n                    }\n                    alt={winner.playerName}\n                    className=\"w-12 h-12 rounded-full object-cover border-2 border-[#F7A531]/70\"\n                    onError={(e) => {\n                      e.currentTarget.src =\n                        \"https://safa.sgp1.digitaloceanspaces.com/safa./avatar_images/Ravex_M.png\";\n                    }}\n                  />\n                  <div>\n                    <p className=\"text-[#4E2A0B] font-bold text-md leading-tight\">\n                      {winner.playerName}\n                    </p>\n                    <p className=\"text-[#4E2A0B]/70 text-xs\">\n                      Placed {winner.betAmount} ‚Ä¢ {formatDate(winner.createdAt)}\n                    </p>\n                  </div>\n                </div>\n\n                {/* Right: Won Amount */}\n                <div className=\"text-right\">\n                  <p className=\"text-[#4E2A0B] font-bold text-sm flex items-center justify-end\">\n                    WON\n                    <img\n                      src={coinImgPath}\n                      alt=\"coin\"\n                      className=\"w-5 h-5 mx-1 inline-block\"\n                    />\n                    {formatNumber(winner.wonAmount)}\n                  </p>\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 830, "column": 0}, "map": {"version":3,"sources":["file:///Users/dinansarithmini/Development/Monkey_Banana/monkey-banana/src/components/hooks/useContinuousGame.ts"],"sourcesContent":["import { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\n\n// üß† Define your game state type\ninterface Player {\n  id: string;\n  name: string;\n  profileImage?: string;\n  amount: number;\n}\n\ninterface Winner {\n  id: string;\n  name: string;\n  profileImage?: string;\n}\n\ninterface GameState {\n  phase: \"betting\" | \"spinning\" | \"finished\" | \"round_ending\";\n  totalPot: number;\n  timeLeft: number;\n  roundNumber: number;\n  players: Player[];\n  winner?: Winner | null;\n  rotation?: number;\n}\n\ninterface UseContinuousGameReturn {\n  gameState: GameState | null;\n  loading: boolean;\n  error: string | null;\n  joinGame: (playerName: string, betAmount: number) => Promise<{ success: boolean; error?: string }>;\n  addBotsToGame: (bots: any[]) => Promise<void>;\n  userId: string | null;\n  playerName: string | null;\n  gameSessionUuid: string | null;\n}\n\n/**\n * üéÆ useContinuousGame\n * Custom hook to handle continuous betting game logic (socket or polling based)\n */\nexport function useContinuousGame(): UseContinuousGameReturn {\n  const [gameState, setGameState] = useState<GameState | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [userId, setUserId] = useState<string | null>(null);\n  const [playerName, setPlayerName] = useState<string | null>(\"Player_\" + Math.floor(Math.random() * 1000));\n  const [gameSessionUuid, setGameSessionUuid] = useState<string | null>(null);\n\n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\n\n  // ‚öôÔ∏è Fetch or simulate game state\n  const fetchGameState = async () => {\n    try {\n      // Example backend endpoint\n      const response = await axios.get(\n        `${process.env.NEXT_PUBLIC_SERVER_BACKEND_URL || \"\"}/api/gameState`\n      );\n\n      if (response.data?.status && response.data?.gameState) {\n        setGameState(response.data.gameState);\n        setError(null);\n      } else {\n        // fallback to mock data if backend not ready\n        setGameState(mockGameState());\n      }\n    } catch (err) {\n      console.warn(\"‚ö†Ô∏è Backend not available ‚Äî using mock state\");\n      setGameState(mockGameState());\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // üßç Join Game\n  const joinGame = async (playerName: string, betAmount: number) => {\n    try {\n      // Example backend join call\n      const response = await axios.post(\n        `${process.env.NEXT_PUBLIC_SERVER_BACKEND_URL || \"\"}/api/joinGame`,\n        { name: playerName, amount: betAmount }\n      );\n\n      if (response.data?.success) {\n        await fetchGameState();\n        return { success: true };\n      }\n      return { success: false, error: response.data?.message || \"Join failed\" };\n    } catch (err) {\n      console.error(\"Join game error\", err);\n      return { success: false, error: \"Network error joining game\" };\n    }\n  };\n\n  // ü§ñ Add bots dynamically (optional)\n  const addBotsToGame = async (bots: any[]) => {\n    try {\n      await axios.post(\n        `${process.env.NEXT_PUBLIC_SERVER_BACKEND_URL || \"\"}/api/addBots`,\n        { bots }\n      );\n      await fetchGameState();\n    } catch (err) {\n      console.error(\"Add bots failed\", err);\n    }\n  };\n\n  // üåÄ Poll game state every few seconds\n  useEffect(() => {\n    fetchGameState();\n    intervalRef.current = setInterval(fetchGameState, 5000);\n\n    return () => {\n      if (intervalRef.current) clearInterval(intervalRef.current);\n    };\n  }, []);\n\n  // ü™É Helper mock game data (used if backend not responding)\n  const mockGameState = (): GameState => {\n    const mockPlayers: Player[] = [\n      { id: \"1\", name: \"Andrew Derek\", amount: 40, profileImage: \"/avatars/player1.png\" },\n      { id: \"2\", name: \"Enjella Melon\", amount: 16, profileImage: \"/avatars/player2.png\" },\n      { id: \"3\", name: \"David Yomen\", amount: 6, profileImage: \"/avatars/player3.png\" },\n    ];\n\n    const randomWinner = mockPlayers[Math.floor(Math.random() * mockPlayers.length)];\n\n    return {\n      phase: [\"betting\", \"spinning\", \"finished\"][Math.floor(Math.random() * 3)] as GameState[\"phase\"],\n      totalPot: 62,\n      timeLeft: Math.floor(Math.random() * 60),\n      roundNumber: Math.floor(Math.random() * 1000),\n      players: mockPlayers,\n      winner: randomWinner,\n      rotation: Math.floor(Math.random() * 360),\n    };\n  };\n\n  return {\n    gameState,\n    loading,\n    error,\n    joinGame,\n    addBotsToGame,\n    userId,\n    playerName,\n    gameSessionUuid,\n  };\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAyCO,SAAS;IACd,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,qOAAQ,EAAmB;IAC7D,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,qOAAQ,EAAC;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,qOAAQ,EAAgB;IAClD,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,qOAAQ,EAAgB;IACpD,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,qOAAQ,EAAgB,YAAY,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK;IACnG,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,IAAA,qOAAQ,EAAgB;IAEtE,MAAM,cAAc,IAAA,mOAAM,EAAwB;IAElD,kCAAkC;IAClC,MAAM,iBAAiB;QACrB,IAAI;YACF,2BAA2B;YAC3B,MAAM,WAAW,MAAM,oKAAK,CAAC,GAAG,CAC9B,GAAG,QAAQ,GAAG,CAAC,8BAA8B,IAAI,GAAG,cAAc,CAAC;YAGrE,IAAI,SAAS,IAAI,EAAE,UAAU,SAAS,IAAI,EAAE,WAAW;gBACrD,aAAa,SAAS,IAAI,CAAC,SAAS;gBACpC,SAAS;YACX,OAAO;gBACL,6CAA6C;gBAC7C,aAAa;YACf;QACF,EAAE,OAAO,KAAK;YACZ,QAAQ,IAAI,CAAC;YACb,aAAa;QACf,SAAU;YACR,WAAW;QACb;IACF;IAEA,eAAe;IACf,MAAM,WAAW,OAAO,YAAoB;QAC1C,IAAI;YACF,4BAA4B;YAC5B,MAAM,WAAW,MAAM,oKAAK,CAAC,IAAI,CAC/B,GAAG,QAAQ,GAAG,CAAC,8BAA8B,IAAI,GAAG,aAAa,CAAC,EAClE;gBAAE,MAAM;gBAAY,QAAQ;YAAU;YAGxC,IAAI,SAAS,IAAI,EAAE,SAAS;gBAC1B,MAAM;gBACN,OAAO;oBAAE,SAAS;gBAAK;YACzB;YACA,OAAO;gBAAE,SAAS;gBAAO,OAAO,SAAS,IAAI,EAAE,WAAW;YAAc;QAC1E,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,mBAAmB;YACjC,OAAO;gBAAE,SAAS;gBAAO,OAAO;YAA6B;QAC/D;IACF;IAEA,qCAAqC;IACrC,MAAM,gBAAgB,OAAO;QAC3B,IAAI;YACF,MAAM,oKAAK,CAAC,IAAI,CACd,GAAG,QAAQ,GAAG,CAAC,8BAA8B,IAAI,GAAG,YAAY,CAAC,EACjE;gBAAE;YAAK;YAET,MAAM;QACR,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,mBAAmB;QACnC;IACF;IAEA,uCAAuC;IACvC,IAAA,sOAAS,EAAC;QACR;QACA,YAAY,OAAO,GAAG,YAAY,gBAAgB;QAElD,OAAO;YACL,IAAI,YAAY,OAAO,EAAE,cAAc,YAAY,OAAO;QAC5D;IACF,GAAG,EAAE;IAEL,4DAA4D;IAC5D,MAAM,gBAAgB;QACpB,MAAM,cAAwB;YAC5B;gBAAE,IAAI;gBAAK,MAAM;gBAAgB,QAAQ;gBAAI,cAAc;YAAuB;YAClF;gBAAE,IAAI;gBAAK,MAAM;gBAAiB,QAAQ;gBAAI,cAAc;YAAuB;YACnF;gBAAE,IAAI;gBAAK,MAAM;gBAAe,QAAQ;gBAAG,cAAc;YAAuB;SACjF;QAED,MAAM,eAAe,WAAW,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,YAAY,MAAM,EAAE;QAEhF,OAAO;YACL,OAAO;gBAAC;gBAAW;gBAAY;aAAW,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,GAAG;YACzE,UAAU;YACV,UAAU,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK;YACrC,aAAa,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK;YACxC,SAAS;YACT,QAAQ;YACR,UAAU,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK;QACvC;IACF;IAEA,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 962, "column": 0}, "map": {"version":3,"sources":["file:///Users/dinansarithmini/Development/Monkey_Banana/monkey-banana/src/components/UIComponents/ContinuousBettingWheel/ContinuousBettingWheel.tsx"],"sourcesContent":["\"use client\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport axios from \"axios\";\nimport SlotMachine from \"./subcomponents/SlotMachine\";\nimport ResultPopup from \"./subcomponents/ResultPopup\";\nimport InsufficientPopup from \"./subcomponents/InsufficientPopup\";\nimport BetConfirmationPopup from \"./subcomponents/BetConfirmationPopup\";\nimport WalletBalanceBadge from \"@/components/UIComponents/WalletBalanceBadge/WalletBalanceBadge\";\nimport { Clock, Users } from \"lucide-react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport PastWinners from \"@/components/UIComponents/PastWinners/PastWinners\";\nimport { useContinuousGame } from \"../../hooks/useContinuousGame\";\n\nconst ContinuousBettingWheel: React.FC = () => {\n  const {\n    gameState,\n    loading,\n    error,\n    joinGame,\n    userId,\n    playerName,\n    gameSessionUuid,\n  } = useContinuousGame();\n\n  const [walletBalance, setWalletBalance] = useState<number | null>(null);\n  const [pendingBet, setPendingBet] = useState<number | null>(null);\n  const [showBetPopup, setShowBetPopup] = useState(false);\n  const [showInsufficient, setShowInsufficient] = useState(false);\n\n  const coinImgPath = \"/images/Coin.png\";\n\n  const fetchWalletBalance = async () => {\n    if (!userId) return;\n    try {\n      const response = await axios.get(\n        `${process.env.NEXT_PUBLIC_SERVER_BACKEND_URL}/api/getUserWalletBalance`,\n        { params: { userUuid: userId } }\n      );\n      if (response.data.success) setWalletBalance(response.data.balance);\n    } catch (err) {\n      console.error(\"Failed to fetch wallet balance\", err);\n    }\n  };\n\n  useEffect(() => {\n    fetchWalletBalance();\n  }, [userId, gameState]);\n\n  const handleQuickBet = (amount: number) => {\n    if (!playerName?.trim()) return alert(\"Please enter your name first\");\n    if ((walletBalance ?? 0) < amount) return setShowInsufficient(true);\n    setPendingBet(amount);\n    setShowBetPopup(true);\n  };\n\n  const confirmBet = async () => {\n    if (!pendingBet) return;\n    setShowBetPopup(false);\n\n    try {\n      const releaseResponse = await axios.post(\n        `${process.env.NEXT_PUBLIC_SERVER_BACKEND_URL}/api/createUserGame`,\n        {\n          userUuid: userId,\n          gameSessionUuid,\n          sessionUuid: gameState?.roundNumber,\n          amount: pendingBet,\n        }\n      );\n\n      if (!releaseResponse.data?.status) {\n        alert(\"Failed to place bet.\");\n        return;\n      }\n\n      const result = await joinGame((playerName ?? \"\").trim(), pendingBet);\n      if (result.success) {\n        alert(\"Successfully joined the game!\");\n      }\n    } catch (err) {\n      alert(\"Error joining game.\");\n    } finally {\n      setPendingBet(null);\n    }\n  };\n\n  const quickBetAmounts = [1, 5]; // Quick bet options\n\n  if (loading)\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-yellow-300 via-yellow-400 to-yellow-500 flex items-center justify-center\">\n        <p className=\"text-[#4E2A0B] font-bold text-xl\">Loading game...</p>\n      </div>\n    );\n\n  if (error)\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-yellow-100\">\n        <Card className=\"bg-[#FFF5C3] border-[#F7A531]\">\n          <CardContent className=\"text-center\">\n            <p className=\"text-red-500 font-bold\">{error}</p>\n            <Button onClick={() => window.location.reload()} className=\"mt-2\">\n              Retry\n            </Button>\n          </CardContent>\n        </Card>\n      </div>\n    );\n\n  return (\n    <div\n      className=\"min-h-screen bg-cover bg-center bg-no-repeat overflow-y-auto\"\n      style={{ backgroundImage: \"url('/images/background_image.png')\" }}\n    >\n      {/* Popups */}\n      \n      <InsufficientPopup show={showInsufficient} onClose={() => setShowInsufficient(false)} />\n      <BetConfirmationPopup\n        show={showBetPopup}\n        amount={pendingBet ?? 0}\n        onConfirm={confirmBet}\n        onCancel={() => setShowBetPopup(false)}\n        isPlacing={false}\n      />\n\n      {/* Header */}\n      <div className=\"pt-8 px-6 flex items-center justify-between\">\n        <img\n          src=\"/images/monkey_logo.png\"\n          alt=\"Monkey Banana\"\n          className=\"h-16 w-auto\"\n        />\n        <WalletBalanceBadge balance={walletBalance ?? 0} />\n      </div>\n\n      {/* Slot Machine */}\n      <div className=\"mt-6\">\n        <SlotMachine\n          players={gameState?.players || []}\n          currentWinnerId={gameState?.winner?.id}\n          isSpinning={gameState?.phase === \"spinning\"}\n        />\n      </div>\n\n      {/* Status */}\n      <div className=\"text-center mt-4\">\n        <h2 className=\"text-[#4E2A0B] font-bold text-lg sm:text-2xl\">\n          {gameState?.phase === \"betting\"\n            ? \"Place your bets!\"\n            : gameState?.phase === \"spinning\"\n            ? \"Spinning the wheel...\"\n            : gameState?.phase === \"finished\"\n            ? `Winner: ${gameState?.winner?.name}`\n            : \"Waiting for next round...\"}\n        </h2>\n      </div>\n\n      {/* Timer + Bet Buttons */}\n      <div className=\"px-6 mt-6 mb-10\">\n        {gameState?.phase === \"betting\" && (\n          <>\n            <Card className=\"bg-[#FFF5C3] border-[#F7A531] mb-4\">\n              <CardContent className=\"flex justify-between items-center text-[#4E2A0B] font-bold\">\n                <div className=\"flex items-center gap-2\">\n                  <Clock className=\"text-[#4E2A0B]\" />\n                  <span>Next Spin</span>\n                </div>\n                <span className=\"text-xl\">{gameState.timeLeft}</span>\n              </CardContent>\n            </Card>\n\n            <div className=\"flex justify-center gap-3\">\n              {quickBetAmounts.map((amount) => (\n                <Button\n                  key={amount}\n                  onClick={() => handleQuickBet(amount)}\n                  className=\"bg-gradient-to-b from-[#FFD85A] to-[#F7A531] text-[#4E2A0B] font-extrabold px-6 py-2 rounded-full hover:brightness-105\"\n                >\n                  <img src={coinImgPath} alt=\"coin\" className=\"w-5 h-5 inline mr-1\" />\n                  {amount}\n                </Button>\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n\n      {/* Active Players */}\n      {gameState?.players && (\n        <div className=\"bg-[#FFD85A] rounded-t-2xl pt-6 pb-10 px-4\">\n          <div className=\"flex items-center justify-center gap-2 mb-4\">\n            <Users className=\"text-[#4E2A0B]\" />\n            <span className=\"text-[#4E2A0B] font-bold text-lg\">Active Players</span>\n          </div>\n\n          <div className=\"space-y-2 max-h-80 overflow-y-auto scrollbar-hide\">\n            {gameState.players.map((p) => (\n              <Card key={p.id} className=\"bg-[#FFF5C3] border-[#F7A531]\">\n                <CardContent className=\"flex justify-between items-center\">\n                  <div className=\"flex items-center gap-2\">\n                    <img\n                      src={p.profileImage || \"/images/default-avatar.png\"}\n                      alt={p.name}\n                      className=\"w-10 h-10 rounded-full\"\n                    />\n                    <p className=\"text-[#4E2A0B] font-bold\">{p.name}</p>\n                  </div>\n                  <div className=\"flex items-center gap-1 text-[#4E2A0B] font-bold\">\n                    <img src={coinImgPath} alt=\"coin\" className=\"w-5 h-5\" />\n                    {p.amount}\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Past Winners */}\n      <div className=\"px-4 mt-8\">\n        <PastWinners refreshTrigger={gameState?.roundNumber || 0} />\n      </div>\n    </div>\n  );\n};\n\nexport default ContinuousBettingWheel;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1400, "column": 0}, "map": {"version":3,"sources":["file:///Users/dinansarithmini/Development/Monkey_Banana/monkey-banana/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React from \"react\";\nimport ContinuousBettingWheel from \"@/components/UIComponents/ContinuousBettingWheel/ContinuousBettingWheel\";\n\nexport default function HomePage() {\n  return (\n    <main className=\"min-h-screen flex flex-col items-center justify-center bg-gradient-to-br from-[#FFF5C3] via-[#FFD85A] to-[#F7A531]\">\n      <ContinuousBettingWheel />\n    </main>\n  );\n}\n"],"names":[],"mappings":";;;;;AAGA;AAHA;;;AAKe,SAAS;IACtB,qBACE,kQAAC;QAAK,WAAU;kBACd,cAAA,kQAAC,qNAAsB;;;;;;;;;;AAG7B","debugId":null}}]
}