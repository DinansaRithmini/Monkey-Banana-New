{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/dinansarithmini/Development/Monkey_Banana/monkey-banana/src/components/hooks/useContinuousGame.ts"],"sourcesContent":["import { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\n\n// 🧠 Define your game state type\ninterface Player {\n  id: string;\n  name: string;\n  profileImage?: string;\n  amount: number;\n}\n\ninterface Winner {\n  id: string;\n  name: string;\n  profileImage?: string;\n}\n\ninterface GameState {\n  phase: \"betting\" | \"spinning\" | \"finished\" | \"round_ending\";\n  totalPot: number;\n  timeLeft: number;\n  roundNumber: number;\n  players: Player[];\n  winner?: Winner | null;\n  rotation?: number;\n}\n\ninterface UseContinuousGameReturn {\n  gameState: GameState | null;\n  loading: boolean;\n  error: string | null;\n  joinGame: (playerName: string, betAmount: number) => Promise<{ success: boolean; error?: string }>;\n  addBotsToGame: (bots: any[]) => Promise<void>;\n  userId: string | null;\n  playerName: string | null;\n  gameSessionUuid: string | null;\n}\n\n/**\n * 🎮 useContinuousGame\n * Custom hook to handle continuous betting game logic (socket or polling based)\n */\nexport function useContinuousGame(): UseContinuousGameReturn {\n  const [gameState, setGameState] = useState<GameState | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [userId, setUserId] = useState<string | null>(null);\n  const [playerName, setPlayerName] = useState<string | null>(\"Player_\" + Math.floor(Math.random() * 1000));\n  const [gameSessionUuid, setGameSessionUuid] = useState<string | null>(null);\n\n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\n\n  // ⚙️ Fetch or simulate game state\n  const fetchGameState = async () => {\n    try {\n      // Example backend endpoint\n      const response = await axios.get(\n        `${process.env.NEXT_PUBLIC_SERVER_BACKEND_URL || \"\"}/api/gameState`\n      );\n\n      if (response.data?.status && response.data?.gameState) {\n        setGameState(response.data.gameState);\n        setError(null);\n      } else {\n        // fallback to mock data if backend not ready\n        setGameState(mockGameState());\n      }\n    } catch (err) {\n      console.warn(\"⚠️ Backend not available — using mock state\");\n      setGameState(mockGameState());\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 🧍 Join Game\n  const joinGame = async (playerName: string, betAmount: number) => {\n    try {\n      // Example backend join call\n      const response = await axios.post(\n        `${process.env.NEXT_PUBLIC_SERVER_BACKEND_URL || \"\"}/api/joinGame`,\n        { name: playerName, amount: betAmount }\n      );\n\n      if (response.data?.success) {\n        await fetchGameState();\n        return { success: true };\n      }\n      return { success: false, error: response.data?.message || \"Join failed\" };\n    } catch (err) {\n      console.error(\"Join game error\", err);\n      return { success: false, error: \"Network error joining game\" };\n    }\n  };\n\n  // 🤖 Add bots dynamically (optional)\n  const addBotsToGame = async (bots: any[]) => {\n    try {\n      await axios.post(\n        `${process.env.NEXT_PUBLIC_SERVER_BACKEND_URL || \"\"}/api/addBots`,\n        { bots }\n      );\n      await fetchGameState();\n    } catch (err) {\n      console.error(\"Add bots failed\", err);\n    }\n  };\n\n  // 🌀 Poll game state every few seconds\n  useEffect(() => {\n    fetchGameState();\n    intervalRef.current = setInterval(fetchGameState, 5000);\n\n    return () => {\n      if (intervalRef.current) clearInterval(intervalRef.current);\n    };\n  }, []);\n\n  // 🪃 Helper mock game data (used if backend not responding)\n  const mockGameState = (): GameState => {\n    const mockPlayers: Player[] = [\n      { id: \"1\", name: \"Andrew Derek\", amount: 40, profileImage: \"/avatars/player1.png\" },\n      { id: \"2\", name: \"Enjella Melon\", amount: 16, profileImage: \"/avatars/player2.png\" },\n      { id: \"3\", name: \"David Yomen\", amount: 6, profileImage: \"/avatars/player3.png\" },\n    ];\n\n    const randomWinner = mockPlayers[Math.floor(Math.random() * mockPlayers.length)];\n\n    return {\n      phase: [\"betting\", \"spinning\", \"finished\"][Math.floor(Math.random() * 3)] as GameState[\"phase\"],\n      totalPot: 62,\n      timeLeft: Math.floor(Math.random() * 60),\n      roundNumber: Math.floor(Math.random() * 1000),\n      players: mockPlayers,\n      winner: randomWinner,\n      rotation: Math.floor(Math.random() * 360),\n    };\n  };\n\n  return {\n    gameState,\n    loading,\n    error,\n    joinGame,\n    addBotsToGame,\n    userId,\n    playerName,\n    gameSessionUuid,\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["file:///Users/dinansarithmini/Development/Monkey_Banana/monkey-banana/src/components/UIComponents/ContinuousBettingWheel/subcomponents/SlotMachine.tsx"],"sourcesContent":["\"use client\";\nimport React from \"react\";\nimport SlotMachineReel from \"./subcomponents/SlotMachineReel\";\ninterface Player {\n  id: string;\n  name: string;\n  amount: number;\n  isWinner?: boolean;\n}\n\ninterface SlotMachineProps {\n  players: Player[];\n  currentWinnerId?: string | null;\n  isSpinning: boolean;\n}\n\nconst SlotMachine: React.FC<SlotMachineProps> = ({\n  players,\n  currentWinnerId,\n  isSpinning,\n}) => {\n  // Select current player (winner or fallback)\n  const currentPlayer =\n    players.find((p) => p.id === currentWinnerId) || players[0];\n\n  return (\n    <div className=\"relative w-full max-w-3xl mx-auto p-4\">\n      {/* Slot machine container */}\n      <div className=\"relative flex flex-col items-center\">\n        {/* === Total Coin Balance (Above Slot Machine) === */}\n        <div className=\"flex items-center justify-center gap-2 mb-3 mt-2\">\n          {/* 🪙 Coin Circle */}\n          <div className=\"w-8 h-8 md:w-9 md:h-9 rounded-full bg-[#F7A531] flex items-center justify-center shadow-[0_2px_4px_rgba(0,0,0,0.3)] mt-[40px]\">\n            <img\n              src=\"/images/gameon_chip.png\"\n              alt=\"coin\"\n              className=\"w-5 h-5 md:w-6 md:h-6 object-contain\"\n            />\n          </div>\n\n          {/* 💰 Balance Amount */}\n          <span className=\"text-[30px] md:text-[0px] leading-none font-bungee text-white drop-shadow-[4px_4px_0_#4E2A0B] mt-[20px]\">\n            474.34\n          </span>\n        </div>\n\n        {/* === Slot machine wrapper === */}\n        <div className=\"relative flex justify-center items-center mb-1\">\n          {/* 🌟 Shine background effect (code-based) */}\n          <div\n            className=\"absolute inset-0 z-0 opacity-80 animate-rotate-slow\"\n            style={{\n              background:\n                \"radial-gradient(circle at center, rgba(255, 216, 90, 0.35) 0%, rgba(247, 165, 49, 0.15) 40%, rgba(78, 42, 11, 0) 70%)\",\n            }}\n          ></div>\n\n          {/* 🎰 Slot machine image */}\n          <img\n            src=\"/images/slot_machine.gif\"\n            alt=\"Slot Machine\"\n            className=\"relative drop-shadow-lg select-none pointer-events-none max-w-[538px] h-auto z-10 mt-[1px]\"\n          />\n//\n         \n          //\n        </div>\n\n        {/* === Action Buttons (Below Slot Machine) === */}\n        <div className=\"flex justify-center items-center gap-6 mt-6\">\n          {/* Dark Brown Button */}\n          <button className=\"relative w-[185px] h-[50px] active:scale-95 transition-transform\">\n            <img\n              src=\"/images/dark_brown_button.png\"\n              alt=\"Dark Brown Button\"\n              className=\"absolute inset-0 w-full h-full object-contain select-none pointer-events-none\"\n            />\n            <span className=\"relative z-10 flex items-center justify-center gap-2 h-full text-[#FFD85A] font-bungee text-lg\">\n              <img\n                src=\"/images/gameon_chip.png\"\n                alt=\"coin\"\n                className=\"w-5 h-5 md:w-6 md:h-6 object-contain\"\n              />\n              + 1\n            </span>\n          </button>\n\n          {/* Light Brown Button */}\n          <button className=\"relative w-[185px] h-[50px] active:scale-95 transition-transform\">\n            <img\n              src=\"/images/light_brown_button.png\"\n              alt=\"Light Brown Button\"\n              className=\"absolute inset-0 w-full h-full object-contain select-none pointer-events-none\"\n            />\n            <span className=\"relative z-10 flex items-center justify-center h-full text-[#FFFFFF] font-bungee text-lg\">\n              ADD\n            </span>\n          </button>\n        </div>\n\n        {/* === Time Holder (Below Buttons) === */}\n        <div className=\"flex justify-center items-center mt-2\">\n          <div className=\"relative w-[320px] h-[190px]\">\n            {/* Background image */}\n            <img\n              src=\"/images/time_holder.png\"\n              alt=\"Time Holder\"\n              className=\"absolute inset-0 w-full h-full object-contain select-none pointer-events-none\"\n            />\n\n            {/* 🕒 Text Overlay (Inside white area) */}\n            <div className=\"absolute inset-0 flex flex-col items-center justify-center text-center z-20 translate-x-[40px]\">\n              <span className=\"text-[#A35B1B] font-bungee text-sm tracking-wide leading-none mb-1\">\n                TIME REMAINING\n              </span>\n              <span className=\"text-[#4E2A0B] font-bungee text-3xl leading-none\">\n                59:00\n              </span>\n            </div>\n            {/* === Past Winners Section === */}\n            <div className=\"relative w-full flex justify-center mt-60\">\n              {/* 🟤 Background */}\n              <div className=\"relative w-screen -mx-15 h-auto\">\n                <img\n                  src=\"/images/past_player_background.png\" // reuse or change to a new image\n                  alt=\"Past Winners Background\"\n                  className=\"absolute left-1/2 top-0 -translate-x-1/2 w-[140vw] md:w-[135vw] h-auto object-contain select-none pointer-events-none scale-110\"\n                  style={{\n                    minHeight: \"520px\",\n                  }}\n                />\n\n                {/* === Content Overlay === */}\n                <div className=\"absolute inset-0 flex flex-col items-center mt-[30px] px-4 z-10\">\n                  {/* 🏷️ Header */}\n                  <div className=\"px-5 py-8 mb-10\">\n                    <span className=\"font-bungee text-white text-lg md:text-xl drop-shadow-[2px_2px_0_#4E2A0B]\">\n                      PAST WINNERS\n                    </span>\n                  </div>\n\n                  {/* 👑 Winner Cards */}\n                  <div className=\"w-full flex flex-col items-center gap-3\">\n                    {[\n                      {\n                        name: \"ALEX COOPER\",\n                        amount: 120.0,\n                        avatar: \"/images/profile.png\",\n                      },\n                      {\n                        name: \"MARIA GREEN\",\n                        amount: 95.0,\n                        avatar: \"/images/profile.png\",\n                      },\n                      {\n                        name: \"JOHN DOE\",\n                        amount: 80.0,\n                        avatar: \"/images/profile.png\",\n                      },\n                    ].map((winner, index) => (\n                      <div\n                        key={index}\n                        className=\"flex items-center w-[280px] h-[60px] bg-[#4E2A0B] rounded-xl shadow-md px-3 gap-3\"\n                      >\n                        <img\n                          src={winner.avatar}\n                          alt={winner.name}\n                          className=\"w-[45px] h-[45px] rounded-full object-cover border-2 border-[#FFD85A]\"\n                        />\n                        <div className=\"flex flex-col flex-grow\">\n                          <span className=\"font-bungee text-white text-sm leading-tight\">\n                            {winner.name.toUpperCase()}\n                          </span>\n                          <div className=\"flex items-center gap-1\">\n                            <img\n                              src=\"/images/gameon_chip.png\"\n                              alt=\"coin\"\n                              className=\"w-4 h-4 object-contain\"\n                            />\n                            <span className=\"text-[#FFD85A] font-bungee text-base\">\n                              {winner.amount.toFixed(2)}\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n\n                  {/* === Past Winners Section === */}\n                  <div className=\"relative w-full flex justify-center mt-60\">\n                    {/* 🟤 Background */}\n                    <div className=\"relative w-screen -mx-15 h-auto\">\n                      <img\n                        src=\"/images/past_player_background.png\" // reuse or change to a new image\n                        alt=\"Past Winners Background\"\n                        className=\"absolute left-1/2 top-0 -translate-x-1/2 w-[140vw] md:w-[135vw] h-auto object-contain select-none pointer-events-none scale-110\"\n                        style={{\n                          minHeight: \"520px\",\n                        }}\n                      />\n\n                      {/* === Content Overlay === */}\n                      <div className=\"absolute inset-0 flex flex-col items-center mt-[30px] px-4 z-10\">\n                        {/* 🏷️ Header */}\n                        <div className=\"px-5 py-8 mb-10\">\n                          <span className=\"font-bungee text-white text-lg md:text-xl drop-shadow-[2px_2px_0_#4E2A0B]\">\n                            PAST WINNERS\n                          </span>\n                        </div>\n\n                        {/* 👑 Winner Cards */}\n                        <div className=\"w-full flex flex-col items-center gap-3\">\n                          {[\n                            {\n                              name: \"ALEX COOPER\",\n                              amount: 120.0,\n                              avatar: \"/images/profile.png\",\n                            },\n                            {\n                              name: \"MARIA GREEN\",\n                              amount: 95.0,\n                              avatar: \"/images/profile.png\",\n                            },\n                            {\n                              name: \"JOHN DOE\",\n                              amount: 80.0,\n                              avatar: \"/images/profile.png\",\n                            },\n                          ].map((winner, index) => (\n                            <div\n                              key={index}\n                              className=\"flex items-center w-[280px] h-[60px] bg-[#4E2A0B] rounded-xl shadow-md px-3 gap-3\"\n                            >\n                              <img\n                                src={winner.avatar}\n                                alt={winner.name}\n                                className=\"w-[45px] h-[45px] rounded-full object-cover border-2 border-[#FFD85A]\"\n                              />\n                              <div className=\"flex flex-col flex-grow\">\n                                <span className=\"font-bungee text-white text-sm leading-tight\">\n                                  {winner.name.toUpperCase()}\n                                </span>\n                                <div className=\"flex items-center gap-1\">\n                                  <img\n                                    src=\"/images/gameon_chip.png\"\n                                    alt=\"coin\"\n                                    className=\"w-4 h-4 object-contain\"\n                                  />\n                                  <span className=\"text-[#FFD85A] font-bungee text-base\">\n                                    {winner.amount.toFixed(2)}\n                                  </span>\n                                </div>\n                              </div>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SlotMachine;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 644, "column": 0}, "map": {"version":3,"sources":["file:///Users/dinansarithmini/Development/Monkey_Banana/monkey-banana/src/components/ui/button.tsx"],"sourcesContent":["\"use client\";\nimport * as React from \"react\";\n\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  variant?: \"primary\" | \"secondary\" | \"outline\";\n}\n\nexport const Button: React.FC<ButtonProps> = ({\n  children,\n  onClick,\n  disabled,\n  className = \"\",\n  variant = \"primary\",\n  ...props\n}) => {\n  const base =\n    \"font-extrabold rounded-full px-5 py-2 text-base transition-all active:scale-95 focus:outline-none\";\n\n  const variants: Record<string, string> = {\n    primary:\n      \"bg-gradient-to-b from-[#FFD85A] to-[#F7A531] text-[#4E2A0B] shadow-[0_3px_0_rgba(0,0,0,0.3)] hover:brightness-105\",\n    secondary:\n      \"bg-[#FFF5D6] text-[#8B5A2B] border-2 border-[#F7A531] hover:bg-[#FFE082]\",\n    outline:\n      \"border-2 border-[#F7A531] text-[#F7A531] bg-transparent hover:bg-[#FFF5D6]\",\n  };\n\n  const disabledStyles = \"opacity-50 cursor-not-allowed\";\n\n  return (\n    <button\n      onClick={onClick}\n      disabled={disabled}\n      className={`${base} ${variants[variant]} ${\n        disabled ? disabledStyles : \"\"\n      } ${className}`}\n      {...props}\n    >\n      {children}\n    </button>\n  );\n};\n"],"names":[],"mappings":";;;;;AAAA;;AAOO,MAAM,SAAgC;QAAC,EAC5C,QAAQ,EACR,OAAO,EACP,QAAQ,EACR,YAAY,EAAE,EACd,UAAU,SAAS,EACnB,GAAG,OACJ;IACC,MAAM,OACJ;IAEF,MAAM,WAAmC;QACvC,SACE;QACF,WACE;QACF,SACE;IACJ;IAEA,MAAM,iBAAiB;IAEvB,qBACE,iNAAC;QACC,SAAS;QACT,UAAU;QACV,WAAW,AAAC,GAAU,OAAR,MAAK,KACjB,OADoB,QAAQ,CAAC,QAAQ,EAAC,KAEpC,OADF,WAAW,iBAAiB,IAC7B,KAAa,OAAV;QACH,GAAG,KAAK;kBAER;;;;;;AAGP;KAlCa","debugId":null}},
    {"offset": {"line": 682, "column": 0}, "map": {"version":3,"sources":["file:///Users/dinansarithmini/Development/Monkey_Banana/monkey-banana/src/components/UIComponents/ContinuousBettingWheel/subcomponents/ResultPopup.tsx"],"sourcesContent":["\"use client\";\nimport React from \"react\";\n//import Confetti from \"react-confetti\";\nimport { Button } from \"@/components/ui/button\";\n\ninterface ResultPopupProps {\n  show: boolean;\n  isWinner: boolean;\n  onClose: () => void;\n}\n\nconst ResultPopup: React.FC<ResultPopupProps> = ({ show, isWinner, onClose }) => {\n  if (!show) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black/70 z-50 flex items-center justify-center\">\n      <div\n        className=\"bg-white rounded-2xl p-6 text-center max-w-xs w-[90vw] shadow-[0_6px_32px_rgba(0,0,0,0.25)] relative overflow-hidden\"\n      >\n        {/* Banana gradient arc */}\n        <div className=\"absolute -top-28 left-1/2 -translate-x-1/2 w-full h-60 z-0 overflow-hidden pointer-events-none\">\n          <div\n            className=\"w-full h-full\"\n            style={{\n              background: \"linear-gradient(90deg, #FFD85A, #F7A531)\",\n              borderBottomLeftRadius: \"100% 60%\",\n              borderBottomRightRadius: \"100% 60%\",\n            }}\n          ></div>\n        </div>\n\n        {/* Confetti when winning */}\n        {/* {isWinner && (\n          <div className=\"absolute inset-0 pointer-events-none\">\n            <Confetti recycle={false} />\n          </div>\n        )} */}\n\n        {/* Content */}\n        <div className=\"relative z-10 flex flex-col items-center pt-6\">\n          {/* Result image */}\n          <img\n            src={isWinner ? \"/images/You Won.png\" : \"/images/You Lose.png\"}\n            alt={isWinner ? \"You Won\" : \"You Lose\"}\n            className=\"h-14 w-auto mb-3\"\n          />\n\n          {/* Star / Medal */}\n          <img\n            src={isWinner ? \"/images/Gold_Star.png\" : \"/images/silver star.png\"}\n            alt={isWinner ? \"Gold Star\" : \"Silver Star\"}\n            className=\"h-20 w-20 mx-auto object-contain mb-3\"\n          />\n\n          {/* Message */}\n          <p className=\"text-gray-700 font-medium text-sm mb-6 px-3 text-center\">\n            {isWinner\n              ? \"🎉 Your prize has been added to your wallet!\"\n              : \"Didn’t win this time? Next round could be yours — keep playing!\"}\n          </p>\n\n          {/* Continue Button */}\n          <Button\n            onClick={onClose}\n            className=\"bg-gradient-to-b from-[#FFD85A] to-[#F7A531] text-[#4E2A0B] font-extrabold px-8 py-2 rounded-full hover:brightness-105\"\n          >\n            Continue\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ResultPopup;\n"],"names":[],"mappings":";;;;;AAEA,wCAAwC;AACxC;AAHA;;;AAWA,MAAM,cAA0C;QAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE;IAC1E,IAAI,CAAC,MAAM,OAAO;IAElB,qBACE,iNAAC;QAAI,WAAU;kBACb,cAAA,iNAAC;YACC,WAAU;;8BAGV,iNAAC;oBAAI,WAAU;8BACb,cAAA,iNAAC;wBACC,WAAU;wBACV,OAAO;4BACL,YAAY;4BACZ,wBAAwB;4BACxB,yBAAyB;wBAC3B;;;;;;;;;;;8BAYJ,iNAAC;oBAAI,WAAU;;sCAEb,iNAAC;4BACC,KAAK,WAAW,wBAAwB;4BACxC,KAAK,WAAW,YAAY;4BAC5B,WAAU;;;;;;sCAIZ,iNAAC;4BACC,KAAK,WAAW,0BAA0B;4BAC1C,KAAK,WAAW,cAAc;4BAC9B,WAAU;;;;;;sCAIZ,iNAAC;4BAAE,WAAU;sCACV,WACG,iDACA;;;;;;sCAIN,iNAAC,mKAAM;4BACL,SAAS;4BACT,WAAU;sCACX;;;;;;;;;;;;;;;;;;;;;;;AAOX;KA7DM;uCA+DS","debugId":null}},
    {"offset": {"line": 786, "column": 0}, "map": {"version":3,"sources":["file:///Users/dinansarithmini/Development/Monkey_Banana/monkey-banana/src/components/UIComponents/ContinuousBettingWheel/subcomponents/InsufficientPopup.tsx"],"sourcesContent":["import React from \"react\";\nimport { Button } from \"@/components/ui/button\"; // Assuming Button is your component\nimport Image from \"next/image\";\n\ninterface InsufficientPopupProps {\n  show: boolean;\n  onClose: () => void;\n}\n\nconst InsufficientPopup: React.FC<{ show: boolean; onClose: () => void }> = ({\n  show,\n  onClose,\n}) => {\n  if (!show) return null;\n\n  return (\n    <div\n      className=\"fixed inset-0 bg-opacity-50 bg-black flex items-center justify-center z-50\"\n      onClick={onClose}\n    >\n      <div\n        className=\"relative w-[350px] h-[400px] bg-cover bg-no-repeat bg-center flex flex-col items-center justify-center\"\n        style={{\n          backgroundImage: \"url('/images/insufficient_balance_background.png')\",\n        }}\n        onClick={(e) => e.stopPropagation()}\n      >\n        {/* Header */}\n        <span className=\"absolute top-25 center font-bungee text-[#4E2A0B] text-xl md:text-2xl\">\n          INSUFFICIENT <br></br>\n          BALANCE\n        </span>\n\n        {/* Content */}\n        <p className=\"absolute top-40 text-center text-gray-600 font-medium text-sm md:text-base px-8\">\n          Your Wallet doesn’t have enough coins to place this bet.\n        </p>\n\n        {/* Button */}\n        <button\n          onClick={onClose}\n          className=\"absolute bottom-8 bg-[#F7A531] text-white font-semibold text-lg py-2 px-6 rounded-lg shadow-md hover:bg-[#FFD85A]\"\n        >\n          CONTINUE\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default InsufficientPopup;\n"],"names":[],"mappings":";;;;;;AASA,MAAM,oBAAsE;QAAC,EAC3E,IAAI,EACJ,OAAO,EACR;IACC,IAAI,CAAC,MAAM,OAAO;IAElB,qBACE,iNAAC;QACC,WAAU;QACV,SAAS;kBAET,cAAA,iNAAC;YACC,WAAU;YACV,OAAO;gBACL,iBAAiB;YACnB;YACA,SAAS,CAAC,IAAM,EAAE,eAAe;;8BAGjC,iNAAC;oBAAK,WAAU;;wBAAwE;sCACzE,iNAAC;;;;;wBAAQ;;;;;;;8BAKxB,iNAAC;oBAAE,WAAU;8BAAkF;;;;;;8BAK/F,iNAAC;oBACC,SAAS;oBACT,WAAU;8BACX;;;;;;;;;;;;;;;;;AAMT;KAvCM;uCAyCS","debugId":null}},
    {"offset": {"line": 861, "column": 0}, "map": {"version":3,"sources":["file:///Users/dinansarithmini/Development/Monkey_Banana/monkey-banana/src/components/UIComponents/ContinuousBettingWheel/subcomponents/BetConfirmationPopup.tsx"],"sourcesContent":["\"use client\";\nimport React from \"react\";\nimport { Button } from \"@/components/ui/button\";\n\ninterface BetConfirmationPopupProps {\n  show: boolean;\n  amount: number | null;\n  isPlacing: boolean;\n  onConfirm: () => void;\n  onCancel: () => void;\n}\n\nconst BetConfirmationPopup: React.FC<BetConfirmationPopupProps> = ({\n  show,\n  amount,\n  isPlacing,\n  onConfirm,\n  onCancel,\n}) => {\n  if (!show || amount === null) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black/70 z-50 flex items-center justify-center\">\n      <div\n        className=\"bg-white rounded-2xl p-6 text-center max-w-sm w-[90vw] shadow-[0_6px_32px_rgba(0,0,0,0.25)] relative overflow-hidden\"\n      >\n        {/* Top banana arc background */}\n        <div className=\"absolute -top-28 left-1/2 -translate-x-1/2 w-full h-60 z-0 overflow-hidden pointer-events-none\">\n          <div\n            className=\"w-full h-full\"\n            style={{\n              background: \"linear-gradient(90deg, #FFD85A, #F7A531)\",\n              borderBottomLeftRadius: \"100% 60%\",\n              borderBottomRightRadius: \"100% 60%\",\n            }}\n          ></div>\n        </div>\n\n        {/* Main Content */}\n        <div className=\"relative z-10\">\n          {/* Coin Icon */}\n          <img\n            src=\"/images/Coin.png\"\n            alt=\"Coin\"\n            className=\"w-16 h-16 mx-auto mb-3\"\n          />\n\n          {/* Heading */}\n          <h3 className=\"text-[#4E2A0B] font-extrabold text-xl mb-2\">\n            Confirm Wager\n          </h3>\n\n          <p className=\"text-sm text-gray-700 mb-4\">\n            Are you sure you want to place a wager of\n          </p>\n\n          {/* Amount */}\n          <div className=\"flex justify-center items-center mb-4\">\n            <img\n              src=\"/images/Coin.png\"\n              alt=\"coin\"\n              className=\"inline-block w-6 h-6 mr-2\"\n            />\n            <span className=\"text-2xl font-extrabold text-[#8B5A2B]\">\n              {amount.toLocaleString()}\n            </span>\n          </div>\n\n          <p className=\"text-xs text-gray-500 mb-6\">\n            This amount will be deducted from your wallet balance\n          </p>\n\n          {/* Buttons */}\n          <div className=\"flex gap-3\">\n            <Button\n              onClick={onCancel}\n              className=\"flex-1 bg-gray-300 text-[#4E2A0B] hover:bg-gray-400\"\n            >\n              Cancel\n            </Button>\n            <Button\n              onClick={onConfirm}\n              disabled={isPlacing}\n              className=\"flex-1 bg-gradient-to-b from-[#FFD85A] to-[#F7A531] text-[#4E2A0B] font-extrabold hover:brightness-105\"\n            >\n              {isPlacing ? \"Placing...\" : \"Confirm\"}\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BetConfirmationPopup;\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAYA,MAAM,uBAA4D;QAAC,EACjE,IAAI,EACJ,MAAM,EACN,SAAS,EACT,SAAS,EACT,QAAQ,EACT;IACC,IAAI,CAAC,QAAQ,WAAW,MAAM,OAAO;IAErC,qBACE,iNAAC;QAAI,WAAU;kBACb,cAAA,iNAAC;YACC,WAAU;;8BAGV,iNAAC;oBAAI,WAAU;8BACb,cAAA,iNAAC;wBACC,WAAU;wBACV,OAAO;4BACL,YAAY;4BACZ,wBAAwB;4BACxB,yBAAyB;wBAC3B;;;;;;;;;;;8BAKJ,iNAAC;oBAAI,WAAU;;sCAEb,iNAAC;4BACC,KAAI;4BACJ,KAAI;4BACJ,WAAU;;;;;;sCAIZ,iNAAC;4BAAG,WAAU;sCAA6C;;;;;;sCAI3D,iNAAC;4BAAE,WAAU;sCAA6B;;;;;;sCAK1C,iNAAC;4BAAI,WAAU;;8CACb,iNAAC;oCACC,KAAI;oCACJ,KAAI;oCACJ,WAAU;;;;;;8CAEZ,iNAAC;oCAAK,WAAU;8CACb,OAAO,cAAc;;;;;;;;;;;;sCAI1B,iNAAC;4BAAE,WAAU;sCAA6B;;;;;;sCAK1C,iNAAC;4BAAI,WAAU;;8CACb,iNAAC,mKAAM;oCACL,SAAS;oCACT,WAAU;8CACX;;;;;;8CAGD,iNAAC,mKAAM;oCACL,SAAS;oCACT,UAAU;oCACV,WAAU;8CAET,YAAY,eAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAO1C;KAhFM;uCAkFS","debugId":null}},
    {"offset": {"line": 1016, "column": 0}, "map": {"version":3,"sources":["file:///Users/dinansarithmini/Development/Monkey_Banana/monkey-banana/src/components/ui/card.tsx"],"sourcesContent":["\"use client\";\nimport * as React from \"react\";\n\ninterface CardProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nexport const Card: React.FC<CardProps> = ({ children, className = \"\", ...props }) => {\n  return (\n    <div\n      className={`\n        bg-gradient-to-b from-[#FFF5C3] to-[#FFD85A]\n        border-4 border-[#F7A531]\n        rounded-2xl shadow-[0_4px_0_rgba(0,0,0,0.25)]\n        ${className}\n      `}\n      {...props}\n    >\n      {children}\n    </div>\n  );\n};\n\ninterface CardContentProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nexport const CardContent: React.FC<CardContentProps> = ({\n  children,\n  className = \"\",\n  ...props\n}) => {\n  return (\n    <div\n      className={`p-4 text-[#4E2A0B] font-bold ${className}`}\n      {...props}\n    >\n      {children}\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;;;;AAAA;;AAKO,MAAM,OAA4B;QAAC,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,GAAG,OAAO;IAC9E,qBACE,iNAAC;QACC,WAAW,AAAC,6JAIE,OAAV,WAAU;QAEb,GAAG,KAAK;kBAER;;;;;;AAGP;KAda;AAkBN,MAAM,cAA0C;QAAC,EACtD,QAAQ,EACR,YAAY,EAAE,EACd,GAAG,OACJ;IACC,qBACE,iNAAC;QACC,WAAW,AAAC,gCAAyC,OAAV;QAC1C,GAAG,KAAK;kBAER;;;;;;AAGP;MAba","debugId":null}},
    {"offset": {"line": 1061, "column": 0}, "map": {"version":3,"sources":["file:///Users/dinansarithmini/Development/Monkey_Banana/monkey-banana/src/components/UIComponents/ContinuousBettingWheel/ContinuousBettingWheel.tsx"],"sourcesContent":["\"use client\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n//import Confetti from \"react-confetti\";\nimport { useWindowSize } from \"@uidotdev/usehooks\";\nimport { useContinuousGame } from \"../../hooks/useContinuousGame\";\n\nimport SlotMachine from \"./subcomponents/SlotMachine\";\nimport ResultPopup from \"./subcomponents/ResultPopup\";\nimport InsufficientPopup from \"./subcomponents/InsufficientPopup\";\nimport BetConfirmationPopup from \"./subcomponents/BetConfirmationPopup\";\nimport { Button } from \"@/components/ui/button\";\n\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Clock } from \"lucide-react\";\n\nconst ContinuousBettingWheel: React.FC = () => {\n  const {\n    gameState,\n    loading,\n    error,\n    joinGame,\n    userId,\n    playerName,\n    gameSessionUuid,\n  } = useContinuousGame();\n\n  const [walletBalance, setWalletBalance] = useState<number | null>(null);\n  const [hasJoined, setHasJoined] = useState(false);\n  const [pendingBet, setPendingBet] = useState<number | null>(null);\n  const [showBetPopup, setShowBetPopup] = useState(false);\n  const [showInsufficient, setShowInsufficient] = useState(false);\n  const [showResult, setShowResult] = useState(false);\n  const [isWinner, setIsWinner] = useState(false);\n  const [showPopup, setShowPopup] = useState(false); // State for popup visibility\n\n  const { width, height } = useWindowSize();\n\n  const coinImgPath = \"/images/dark_brown_button.png\";\n  const quickBetAmounts = [1, 5];\n\n  // Fetch user wallet balance\n  const fetchWalletBalance = async () => {\n    if (!userId) return;\n    try {\n      const response = await axios.get(\n        `${process.env.NEXT_PUBLIC_SERVER_BACKEND_URL}/api/getUserWalletBalance`,\n        { params: { userUuid: userId } }\n      );\n      if (response.data.success) setWalletBalance(response.data.balance);\n    } catch (err) {\n      console.error(\"Failed to fetch wallet balance\", err);\n    }\n  };\n\n  useEffect(() => {\n    fetchWalletBalance();\n  }, [userId, gameState]);\n\n  const handleQuickBet = (amount: number) => {\n    if (!playerName?.trim()) return alert(\"Please enter your name first\");\n    if ((walletBalance ?? 0) < amount) return setShowInsufficient(true);\n    setPendingBet(amount);\n    setShowBetPopup(true);\n  };\n\n  const confirmBet = async () => {\n    if (!pendingBet) return;\n    setShowBetPopup(false);\n\n    try {\n      const releaseResponse = await axios.post(\n        `${process.env.NEXT_PUBLIC_SERVER_BACKEND_URL}/api/createUserGame`,\n        {\n          userUuid: userId,\n          gameSessionUuid,\n          sessionUuid: gameState?.roundNumber,\n          amount: pendingBet,\n        }\n      );\n\n      if (!releaseResponse.data?.status) {\n        alert(\"Failed to place bet.\");\n        return;\n      }\n\n      const result = await joinGame((playerName ?? \"\").trim(), pendingBet);\n      if (result.success) setHasJoined(true);\n    } catch (err) {\n      alert(\"Error joining game.\");\n    } finally {\n      setPendingBet(null);\n    }\n  };\n\n  useEffect(() => {\n    if (gameState?.phase === \"finished\" && userId) {\n      const isUserWinner = gameState.winner?.id === userId;\n      setIsWinner(isUserWinner);\n      setShowResult(true);\n      setTimeout(() => setShowResult(false), 6000);\n    }\n  }, [gameState?.phase]);\n\n  const formatTime = (seconds: number) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs < 10 ? \"0\" : \"\"}${secs}`;\n  };\n\n  const formatNumber = (num: number) =>\n    new Intl.NumberFormat(\"en-IN\", { minimumFractionDigits: 0 }).format(num);\n\n  if (loading)\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-yellow-300 via-yellow-400 to-yellow-500 flex items-center justify-center\">\n        <p className=\"text-[#4E2A0B] font-bold text-xl\">Loading game...</p>\n      </div>\n    );\n\n  if (error)\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-yellow-100\">\n        <Card className=\"bg-[#FFF5C3] border-[#F7A531]\">\n          <CardContent className=\"text-center\">\n            <p className=\"text-red-500 font-bold\">{error}</p>\n            <Button onClick={() => window.location.reload()} className=\"mt-2\">\n              Retry\n            </Button>\n          </CardContent>\n        </Card>\n      </div>\n    );\n\n  // Show the Result Popup (if winner)\n  if (showResult && isWinner) {\n    setTimeout(() => setShowResult(false), 6000); // Auto-close after 6 seconds\n  }\n\n  // Function to show the popup\n  const handleShowPopup = () => {\n    setShowPopup(true);\n  };\n\n  // Function to hide the popup\n  const handleClosePopup = () => {\n    setShowPopup(false);\n  };\n\n  return (\n    <div\n      className=\"min-h-screen bg-cover bg-center bg-no-repeat bg-fixed overflow-y-auto transition-opacity duration-700\"\n      style={{\n        backgroundImage: \"url('/images/background_image.png')\",\n        backgroundColor: \"#FFD85A\",\n      }}\n    >\n      {/* Popups */}\n      <ResultPopup\n        show={showResult}\n        isWinner={isWinner}\n        onClose={() => setShowResult(false)}\n      />\n      <InsufficientPopup\n        show={showInsufficient}\n        onClose={() => setShowInsufficient(false)}\n      />\n      <BetConfirmationPopup\n        show={showBetPopup}\n        amount={pendingBet ?? 0}\n        onConfirm={confirmBet}\n        onCancel={() => setShowBetPopup(false)}\n        isPlacing={false}\n      />\n\n      {/* Header Section */}\n      <div className=\"relative w-full flex justify-center items-start pt-8 pb-2\">\n        <div className=\"relative flex flex-col items-center text-center\">\n          {/* Monkey Eyes GIF */}\n          <img\n            src=\"/images/monkey_eyes.gif\"\n            alt=\"Monkey Eyes\"\n            className=\"absolute w-[115px] top-[-30px] md:top-[-30px] left-[-10%] -translate-x-1/2 rotate-[8deg] z-10\"\n          />\n\n          {/* Text */}\n          <span className=\"relative font-bungee text-[#B26A42] text-[36px] md:text-[80px] leading-[0.9] tracking-tight\">\n            MONKEY\n          </span>\n          <span className=\"relative font-bungee text-[#B26A42] text-[36px] md:text-[80px] leading-[0.9] tracking-tight mt-[-4px]\">\n            BANANA\n          </span>\n        </div>\n      </div>\n\n      {/* Temporary Button to Test the Insufficient Balance Popup */}\n      <button\n        onClick={handleShowPopup}\n        className=\"absolute top-4 right-4 bg-[#F7A531] text-white font-semibold text-lg py-2 px-4 rounded-lg shadow-md hover:bg-[#FFD85A]\"\n      >\n        Test Popup\n      </button>\n\n      {/* Insufficient Balance Popup */}\n      <InsufficientPopup show={showPopup} onClose={handleClosePopup} />\n\n      {/* Slot Machine */}\n      <div className=\"mt-6\">\n        <SlotMachine\n          players={gameState?.players || []}\n          currentWinnerId={gameState?.winner?.id}\n          isSpinning={gameState?.phase === \"spinning\"}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ContinuousBettingWheel;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1383, "column": 0}, "map": {"version":3,"sources":["file:///Users/dinansarithmini/Development/Monkey_Banana/monkey-banana/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React from \"react\";\nimport ContinuousBettingWheel from \"@/components/UIComponents/ContinuousBettingWheel/ContinuousBettingWheel\";\n\nexport default function HomePage() {\n  return (\n    <main className=\"min-h-screen flex flex-col items-center justify-center bg-gradient-to-br from-[#FFF5C3] via-[#FFD85A] to-[#F7A531]\">\n      <ContinuousBettingWheel />\n    </main>\n  );\n}\n"],"names":[],"mappings":";;;;;AAGA;AAHA;;;AAKe,SAAS;IACtB,qBACE,iNAAC;QAAK,WAAU;kBACd,cAAA,iNAAC,wNAAsB;;;;;;;;;;AAG7B;KANwB","debugId":null}}]
}